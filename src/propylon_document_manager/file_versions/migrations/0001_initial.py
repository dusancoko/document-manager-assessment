# Generated by Django 5.0.1 on 2025-05-31 19:13

import django.db.models.deletion
import django.utils.timezone
import propylon_document_manager.file_versions.models
import propylon_document_manager.utils.file_management
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("name", models.CharField(blank=True, max_length=255, verbose_name="Name of User")),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="email address")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", propylon_document_manager.file_versions.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="FileVersion",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file_name", models.CharField(max_length=255)),
                ("version_number", models.PositiveIntegerField()),
                (
                    "file_path",
                    models.FileField(
                        upload_to=propylon_document_manager.utils.file_management.unique_file_upload_path
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("virtual_path", models.CharField(max_length=500)),
                ("mime_type", models.CharField(default="application/octet-stream", max_length=100)),
                ("file_size", models.IntegerField(default=-1)),
                ("checksum", models.CharField(blank=True, max_length=64)),
                ("notes", models.TextField(blank=True)),
                (
                    "previous_version",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="next_versions",
                        to="file_versions.fileversion",
                    ),
                ),
                (
                    "root_file",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="all_versions",
                        to="file_versions.fileversion",
                    ),
                ),
                (
                    "uploader",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="fileversion",
            constraint=models.UniqueConstraint(
                condition=models.Q(("previous_version__isnull", True)),
                fields=("virtual_path", "uploader"),
                name="unique_root_file_per_user_and_path",
            ),
        ),
    ]
